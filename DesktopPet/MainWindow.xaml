<!-- 
  MainWindow.xaml - Desktop Pet UI Definition
  
  This file defines the visual appearance and layout of the desktop pet window.
  
  Key Window Properties:
  - WindowStyle="None": Removes title bar and window border for a clean look
  - AllowsTransparency="True": Enables transparent background
  - Background="{x:Null}": Makes the window background completely transparent  
  - Topmost="True": Keeps the pet on top of other windows
  - ShowInTaskbar="False": Hides the window from the taskbar
  - ResizeMode="NoResize": Prevents user from resizing the window
  
  UI Structure:
  - Grid container with mouse click handling for drag functionality
  - Image control to display the cat.gif pet animation
  - Context menu with Exit and Start Movement options (right-click)
-->
<Window x:Class="DesktopPet.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:gif="clr-namespace:WpfAnimatedGif;assembly=WpfAnimatedGif"
        Title="DesktopPet"
        Width="200" Height="200"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="{x:Null}"
        Topmost="True"
        ResizeMode="NoResize"
        ShowInTaskbar="False">

    <!-- Main container grid that handles mouse clicks for dragging the pet -->
    <Grid MouseLeftButtonDown="Pet_Click">
        <!-- Rounded container that clips the image for rounded corners -->
        <Border CornerRadius="16"
                Background="#00FFFFFF"
                ClipToBounds="True">
            <Border.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="New Random Cat 🐱" Click="NewRandomCat_Click"/>
                    <Separator/>
                    <MenuItem Header="Exit" Click="Exit_Click"/>
                </ContextMenu>
            </Border.ContextMenu>

            <!-- Pet image that displays the cat.gif animation using WpfAnimatedGif library -->
            <Image x:Name="PetImage"
                   gif:ImageBehavior.AnimatedSource="cat.gif"
                   Stretch="Uniform"/>
        </Border>

        <!-- Reload button in the top-right corner -->
        <Button x:Name="ReloadButton"
                Width="24" Height="24"
                HorizontalAlignment="Right" VerticalAlignment="Top"
                Margin="4"
                ToolTip="New Random Cat"
                Click="ReloadButton_Click"
                Background="#66000000"
                BorderBrush="Transparent"
                Foreground="White"
                FontFamily="Segoe MDL2 Assets"
                FontSize="14"
                Content="&#xE72C;">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="12">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <!-- Exit button in the top-left corner -->
        <Button x:Name="ExitButton"
            Width="24" Height="24"
            HorizontalAlignment="Left" VerticalAlignment="Top"
            Margin="4"
            ToolTip="Exit"
            Click="ExitTopButton_Click"
            Background="#66000000"
            BorderBrush="Transparent"
            Foreground="White"
            FontFamily="Segoe MDL2 Assets"
            FontSize="14"
                Content="&#xE8BB;">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="12">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Grid>
</Window>
